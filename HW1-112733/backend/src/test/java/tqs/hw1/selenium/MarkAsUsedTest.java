// Generated by Selenium IDE
package tqs.hw1.selenium;

import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import org.openqa.selenium.*;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class MarkAsUsedTest {
  private WebDriver driver;
  private WebDriverWait wait;
  private Map<String, Object> vars;
  JavascriptExecutor js;

  @BeforeEach
  public void setUp() {
    driver = new FirefoxDriver();
    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    js = (JavascriptExecutor) driver;
    vars = new HashMap<>();
  }

  @AfterEach
  public void tearDown() {
    driver.quit();
  }

  @Test
  public void markAsUsed() {
    driver.get("http://localhost:3000/");
    driver.manage().window().setSize(new Dimension(1920, 1053));

    // Espera que o botão de reserva esteja clicável
    WebElement reserveBtn = wait.until(
        ExpectedConditions.elementToBeClickable(By.cssSelector(".meal-card-horizontal:nth-child(3) .reserve-btn")));
    reserveBtn.click();

    // Espera que o botão de toggle apareça e seja clicável
    WebElement viewToggle = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".view-toggle")));
    viewToggle.click();

    // Espera que a reserva esteja visível e clicável
    WebElement reservationItem = wait.until(
        ExpectedConditions.elementToBeClickable(By.cssSelector(".reservation-item:nth-child(1) > .reservation-meal")));
    reservationItem.click();

    // Espera pelo botão de verificação
    WebElement verifyBtn = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".verify-btn")));
    verifyBtn.click();

    // Espera pelo alerta e verifica o texto
    wait.until(ExpectedConditions.alertIsPresent());
    Alert alert = driver.switchTo().alert();
    assertThat(alert.getText(), is("Reserva marcada como utilizada!"));
  }
}
